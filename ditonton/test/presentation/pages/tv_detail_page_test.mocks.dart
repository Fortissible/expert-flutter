// Mocks generated by Mockito 5.4.4 from annotations
// in ditonton/test/presentation/pages/tv_detail_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i12;
import 'dart:ui' as _i14;

import 'package:ditonton/common/state_enum.dart' as _i9;
import 'package:ditonton/data/models/seasons.dart' as _i7;
import 'package:ditonton/domain/entities/tv.dart' as _i11;
import 'package:ditonton/domain/entities/tv_detail.dart' as _i13;
import 'package:ditonton/domain/usecases/get_tv_detail.dart' as _i2;
import 'package:ditonton/domain/usecases/get_tv_recommendation.dart' as _i3;
import 'package:ditonton/domain/usecases/get_watchlist_tv_status.dart' as _i4;
import 'package:ditonton/domain/usecases/remove_watchlist_tv.dart' as _i6;
import 'package:ditonton/domain/usecases/save_watchlist_tv.dart' as _i5;
import 'package:ditonton/presentation/provider/tv_detail_notifier.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetTvDetail_0 extends _i1.SmartFake implements _i2.GetTvDetail {
  _FakeGetTvDetail_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetTvRecommendation_1 extends _i1.SmartFake
    implements _i3.GetTvRecommendation {
  _FakeGetTvRecommendation_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetWatchListTvStatus_2 extends _i1.SmartFake
    implements _i4.GetWatchListTvStatus {
  _FakeGetWatchListTvStatus_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSaveWatchlistTv_3 extends _i1.SmartFake
    implements _i5.SaveWatchlistTv {
  _FakeSaveWatchlistTv_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoveWatchlistTv_4 extends _i1.SmartFake
    implements _i6.RemoveWatchlistTv {
  _FakeRemoveWatchlistTv_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSeasons_5 extends _i1.SmartFake implements _i7.Seasons {
  _FakeSeasons_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TvDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvDetailNotifier extends _i1.Mock implements _i8.TvDetailNotifier {
  MockTvDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetTvDetail get getTvDetail => (super.noSuchMethod(
        Invocation.getter(#getTvDetail),
        returnValue: _FakeGetTvDetail_0(
          this,
          Invocation.getter(#getTvDetail),
        ),
      ) as _i2.GetTvDetail);

  @override
  _i3.GetTvRecommendation get getTvRecommendation => (super.noSuchMethod(
        Invocation.getter(#getTvRecommendation),
        returnValue: _FakeGetTvRecommendation_1(
          this,
          Invocation.getter(#getTvRecommendation),
        ),
      ) as _i3.GetTvRecommendation);

  @override
  _i4.GetWatchListTvStatus get getWatchListStatus => (super.noSuchMethod(
        Invocation.getter(#getWatchListStatus),
        returnValue: _FakeGetWatchListTvStatus_2(
          this,
          Invocation.getter(#getWatchListStatus),
        ),
      ) as _i4.GetWatchListTvStatus);

  @override
  _i5.SaveWatchlistTv get saveWatchlist => (super.noSuchMethod(
        Invocation.getter(#saveWatchlist),
        returnValue: _FakeSaveWatchlistTv_3(
          this,
          Invocation.getter(#saveWatchlist),
        ),
      ) as _i5.SaveWatchlistTv);

  @override
  _i6.RemoveWatchlistTv get removeWatchlist => (super.noSuchMethod(
        Invocation.getter(#removeWatchlist),
        returnValue: _FakeRemoveWatchlistTv_4(
          this,
          Invocation.getter(#removeWatchlist),
        ),
      ) as _i6.RemoveWatchlistTv);

  @override
  _i9.RequestState get tvDetailState => (super.noSuchMethod(
        Invocation.getter(#tvDetailState),
        returnValue: _i9.RequestState.Empty,
      ) as _i9.RequestState);

  @override
  String get tvDetailErrorMsg => (super.noSuchMethod(
        Invocation.getter(#tvDetailErrorMsg),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#tvDetailErrorMsg),
        ),
      ) as String);

  @override
  _i9.RequestState get tvRecommendationState => (super.noSuchMethod(
        Invocation.getter(#tvRecommendationState),
        returnValue: _i9.RequestState.Empty,
      ) as _i9.RequestState);

  @override
  List<_i11.Tv> get tvRecommendations => (super.noSuchMethod(
        Invocation.getter(#tvRecommendations),
        returnValue: <_i11.Tv>[],
      ) as List<_i11.Tv>);

  @override
  String get tvRecommendationsErrorMsg => (super.noSuchMethod(
        Invocation.getter(#tvRecommendationsErrorMsg),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#tvRecommendationsErrorMsg),
        ),
      ) as String);

  @override
  bool get isAddedToWatchlist => (super.noSuchMethod(
        Invocation.getter(#isAddedToWatchlist),
        returnValue: false,
      ) as bool);

  @override
  String get watchlistMessage => (super.noSuchMethod(
        Invocation.getter(#watchlistMessage),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#watchlistMessage),
        ),
      ) as String);

  @override
  _i7.Seasons get seasons => (super.noSuchMethod(
        Invocation.getter(#seasons),
        returnValue: _FakeSeasons_5(
          this,
          Invocation.getter(#seasons),
        ),
      ) as _i7.Seasons);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i12.Future<void> fetchTvDetail(String? id) => (super.noSuchMethod(
        Invocation.method(
          #fetchTvDetail,
          [id],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> fetchTvRecommendations(String? id) => (super.noSuchMethod(
        Invocation.method(
          #fetchTvRecommendations,
          [id],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> addWatchlist(_i13.TvDetail? tv) => (super.noSuchMethod(
        Invocation.method(
          #addWatchlist,
          [tv],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> removeFromWatchlist(_i13.TvDetail? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFromWatchlist,
          [tv],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> loadWatchlistStatus(int? id) => (super.noSuchMethod(
        Invocation.method(
          #loadWatchlistStatus,
          [id],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  void expandSeasonsDetail(bool? isExpanded) => super.noSuchMethod(
        Invocation.method(
          #expandSeasonsDetail,
          [isExpanded],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
