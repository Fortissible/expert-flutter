// Mocks generated by Mockito 5.4.4 from annotations
// in search/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:core/core.dart' as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i3.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i3.Failure, List<_i3.Movie>>> getNowPlayingMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNowPlayingMovies,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i3.Failure, List<_i3.Movie>>>.value(
            _FakeEither_0<_i3.Failure, List<_i3.Movie>>(
          this,
          Invocation.method(
            #getNowPlayingMovies,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i3.Failure, List<_i3.Movie>>>);

  @override
  _i4.Future<_i2.Either<_i3.Failure, List<_i3.Movie>>> getPopularMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularMovies,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i3.Failure, List<_i3.Movie>>>.value(
            _FakeEither_0<_i3.Failure, List<_i3.Movie>>(
          this,
          Invocation.method(
            #getPopularMovies,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i3.Failure, List<_i3.Movie>>>);

  @override
  _i4.Future<_i2.Either<_i3.Failure, List<_i3.Movie>>> getTopRatedMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedMovies,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i3.Failure, List<_i3.Movie>>>.value(
            _FakeEither_0<_i3.Failure, List<_i3.Movie>>(
          this,
          Invocation.method(
            #getTopRatedMovies,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i3.Failure, List<_i3.Movie>>>);

  @override
  _i4.Future<_i2.Either<_i3.Failure, _i3.MovieDetail>> getMovieDetail(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieDetail,
          [id],
        ),
        returnValue: _i4.Future<_i2.Either<_i3.Failure, _i3.MovieDetail>>.value(
            _FakeEither_0<_i3.Failure, _i3.MovieDetail>(
          this,
          Invocation.method(
            #getMovieDetail,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i3.Failure, _i3.MovieDetail>>);

  @override
  _i4.Future<_i2.Either<_i3.Failure, List<_i3.Movie>>> getMovieRecommendations(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieRecommendations,
          [id],
        ),
        returnValue: _i4.Future<_i2.Either<_i3.Failure, List<_i3.Movie>>>.value(
            _FakeEither_0<_i3.Failure, List<_i3.Movie>>(
          this,
          Invocation.method(
            #getMovieRecommendations,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i3.Failure, List<_i3.Movie>>>);

  @override
  _i4.Future<_i2.Either<_i3.Failure, List<_i3.Movie>>> searchMovies(
          String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchMovies,
          [query],
        ),
        returnValue: _i4.Future<_i2.Either<_i3.Failure, List<_i3.Movie>>>.value(
            _FakeEither_0<_i3.Failure, List<_i3.Movie>>(
          this,
          Invocation.method(
            #searchMovies,
            [query],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i3.Failure, List<_i3.Movie>>>);

  @override
  _i4.Future<_i2.Either<_i3.Failure, String>> saveWatchlist(
          _i3.MovieDetail? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWatchlist,
          [movie],
        ),
        returnValue: _i4.Future<_i2.Either<_i3.Failure, String>>.value(
            _FakeEither_0<_i3.Failure, String>(
          this,
          Invocation.method(
            #saveWatchlist,
            [movie],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i3.Failure, String>>);

  @override
  _i4.Future<_i2.Either<_i3.Failure, String>> removeWatchlist(
          _i3.MovieDetail? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [movie],
        ),
        returnValue: _i4.Future<_i2.Either<_i3.Failure, String>>.value(
            _FakeEither_0<_i3.Failure, String>(
          this,
          Invocation.method(
            #removeWatchlist,
            [movie],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i3.Failure, String>>);

  @override
  _i4.Future<bool> isAddedToWatchlist(int? id) => (super.noSuchMethod(
        Invocation.method(
          #isAddedToWatchlist,
          [id],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<_i2.Either<_i3.Failure, List<_i3.Movie>>> getWatchlistMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistMovies,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i3.Failure, List<_i3.Movie>>>.value(
            _FakeEither_0<_i3.Failure, List<_i3.Movie>>(
          this,
          Invocation.method(
            #getWatchlistMovies,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i3.Failure, List<_i3.Movie>>>);
}

/// A class which mocks [TvRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRepository extends _i1.Mock implements _i3.TvRepository {
  MockTvRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i3.Failure, List<_i3.Tv>>> getNowPlayingTvSeries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNowPlayingTvSeries,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i3.Failure, List<_i3.Tv>>>.value(
            _FakeEither_0<_i3.Failure, List<_i3.Tv>>(
          this,
          Invocation.method(
            #getNowPlayingTvSeries,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i3.Failure, List<_i3.Tv>>>);

  @override
  _i4.Future<_i2.Either<_i3.Failure, List<_i3.Tv>>> getTopRatedTvSeries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedTvSeries,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i3.Failure, List<_i3.Tv>>>.value(
            _FakeEither_0<_i3.Failure, List<_i3.Tv>>(
          this,
          Invocation.method(
            #getTopRatedTvSeries,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i3.Failure, List<_i3.Tv>>>);

  @override
  _i4.Future<_i2.Either<_i3.Failure, List<_i3.Tv>>> getPopularTvSeries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularTvSeries,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i3.Failure, List<_i3.Tv>>>.value(
            _FakeEither_0<_i3.Failure, List<_i3.Tv>>(
          this,
          Invocation.method(
            #getPopularTvSeries,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i3.Failure, List<_i3.Tv>>>);

  @override
  _i4.Future<_i2.Either<_i3.Failure, _i3.TvDetail>> getDetailTvSeries(
          String? tvId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetailTvSeries,
          [tvId],
        ),
        returnValue: _i4.Future<_i2.Either<_i3.Failure, _i3.TvDetail>>.value(
            _FakeEither_0<_i3.Failure, _i3.TvDetail>(
          this,
          Invocation.method(
            #getDetailTvSeries,
            [tvId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i3.Failure, _i3.TvDetail>>);

  @override
  _i4.Future<_i2.Either<_i3.Failure, _i3.TvSeasonDetail>>
      getSeasonDetailTvSeries(
    String? tvId,
    String? seasonId,
  ) =>
          (super.noSuchMethod(
            Invocation.method(
              #getSeasonDetailTvSeries,
              [
                tvId,
                seasonId,
              ],
            ),
            returnValue:
                _i4.Future<_i2.Either<_i3.Failure, _i3.TvSeasonDetail>>.value(
                    _FakeEither_0<_i3.Failure, _i3.TvSeasonDetail>(
              this,
              Invocation.method(
                #getSeasonDetailTvSeries,
                [
                  tvId,
                  seasonId,
                ],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i3.Failure, _i3.TvSeasonDetail>>);

  @override
  _i4.Future<_i2.Either<_i3.Failure, List<_i3.Tv>>> searchTvSeries(
          String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchTvSeries,
          [query],
        ),
        returnValue: _i4.Future<_i2.Either<_i3.Failure, List<_i3.Tv>>>.value(
            _FakeEither_0<_i3.Failure, List<_i3.Tv>>(
          this,
          Invocation.method(
            #searchTvSeries,
            [query],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i3.Failure, List<_i3.Tv>>>);

  @override
  _i4.Future<_i2.Either<_i3.Failure, List<_i3.Tv>>> getTvRecommendation(
          String? tvId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvRecommendation,
          [tvId],
        ),
        returnValue: _i4.Future<_i2.Either<_i3.Failure, List<_i3.Tv>>>.value(
            _FakeEither_0<_i3.Failure, List<_i3.Tv>>(
          this,
          Invocation.method(
            #getTvRecommendation,
            [tvId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i3.Failure, List<_i3.Tv>>>);

  @override
  _i4.Future<_i2.Either<_i3.Failure, String>> insertWatchlistTv(
          _i3.TvDetail? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlistTv,
          [tv],
        ),
        returnValue: _i4.Future<_i2.Either<_i3.Failure, String>>.value(
            _FakeEither_0<_i3.Failure, String>(
          this,
          Invocation.method(
            #insertWatchlistTv,
            [tv],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i3.Failure, String>>);

  @override
  _i4.Future<_i2.Either<_i3.Failure, String>> removeWatchlistTv(
          _i3.TvDetail? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlistTv,
          [tv],
        ),
        returnValue: _i4.Future<_i2.Either<_i3.Failure, String>>.value(
            _FakeEither_0<_i3.Failure, String>(
          this,
          Invocation.method(
            #removeWatchlistTv,
            [tv],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i3.Failure, String>>);

  @override
  _i4.Future<bool> isAddedToWatchlist(int? id) => (super.noSuchMethod(
        Invocation.method(
          #isAddedToWatchlist,
          [id],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<_i2.Either<_i3.Failure, List<_i3.Tv>>> getWatchlistTv() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistTv,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i3.Failure, List<_i3.Tv>>>.value(
            _FakeEither_0<_i3.Failure, List<_i3.Tv>>(
          this,
          Invocation.method(
            #getWatchlistTv,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i3.Failure, List<_i3.Tv>>>);
}
